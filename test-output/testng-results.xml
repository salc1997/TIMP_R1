<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-19T23:26:30 UTC" name="Default suite" finished-at="2023-05-19T23:28:20 UTC" duration-ms="109919">
    <groups>
    </groups>
    <test started-at="2023-05-19T23:26:30 UTC" name="Default test" finished-at="2023-05-19T23:28:20 UTC" duration-ms="109919">
      <class name="com.timp.test.BRB.CrescenteEDecrescente">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.timp.test.BRB.CrescenteEDecrescente@61001b64]" started-at="2023-05-19T23:26:30 UTC" name="beforeClass" finished-at="2023-05-19T23:26:33 UTC" duration-ms="3346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="crescenteEDecrescente()[pri:0, instance:com.timp.test.BRB.CrescenteEDecrescente@61001b64]" started-at="2023-05-19T23:26:33 UTC" name="crescenteEDecrescente" finished-at="2023-05-19T23:28:20 UTC" duration-ms="106526" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "0,00"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "0,00"
at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
at java.base/java.lang.Double.parseDouble(Double.java:651)
at java.base/java.lang.Double.valueOf(Double.java:614)
at com.sap.timp.pageObjectModel.BRB.CrescenteEDecrescentePO.crescente(CrescenteEDecrescentePO.java:88)
at com.timp.test.BRB.CrescenteEDecrescente.crescenteEDecrescente(CrescenteEDecrescente.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- crescenteEDecrescente -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.timp.test.BRB.CrescenteEDecrescente@61001b64]" started-at="2023-05-19T23:28:20 UTC" name="afterClass" finished-at="2023-05-19T23:28:20 UTC" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.timp.test.BRB.CrescenteEDecrescente -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
